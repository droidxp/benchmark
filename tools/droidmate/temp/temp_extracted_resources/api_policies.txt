# DroidMate, an automated execution generator for Android apps.
# Copyright (C) 2012-2016 Konrad Jamrozik
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# email: jamrozik@st.cs.uni-saarland.de
# web: www.droidmate.org
#
#
# THIS FILE IS NOT USED TO DEFINE MONITORED APIS.
# TO CHANGE THE LIST OF MONITORED APIS EDIT THE FILE "monitored_apis.json"
#
#
# This file defines list of API policies that will be applied by Droidmate.
# Currently the follow policies are supported:
# - Allow
# - Deny
# - Mock
#
# When using the Allow policy the code defined in the "invokeAPICode" field of
# the API monitoring instruction will be executed. When using the Deny policy,
# an exception, whose type is defined in the "exceptionType" field of the API
# monitoring instruction will be raised, stating "API X blocked by DroidMate".
# Finally, when an API policy is configured to Mock, instead of calling the
# original method, DroidMate will return a default value, as defined in the
# "defaultReturnValue" field of the API monitoring instruction.
#
# If an API is monitored, i.e., exists in the monitored_apis.json file,
# it will be Allowed by default, unless explicitly listed in this file.
#
#
# API blocking usage (tab separated):
# METHOD_SIGNATURE	[URI]	POLICY
# - If the method possess multiple URI parameters, it is possible to specify the URI multiple times.
# - The same API can be blocked multiple times, as long as it uses different URIs
#
#
# Usage examples (tab separated):
# android.hardware.Camera.open(int)	Deny
# java.net.URL.<init>(java.net.URL, java.lang.String, java.net.URLStreamHandler)	Deny
# android.content.ContentResolver->query(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String, android.os.CancellationSignal)	content://sms	Deny
# android.content.ContentResolver->query(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String, android.os.CancellationSignal)	content://call_log	Deny
#
#
# Include your policies below:
