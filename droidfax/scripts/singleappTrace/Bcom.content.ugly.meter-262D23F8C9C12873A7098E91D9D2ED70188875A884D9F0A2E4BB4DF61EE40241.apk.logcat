--------- beginning of /dev/log/system
--------- beginning of /dev/log/main
<com.chinat2t.yun1007.WelComeActivity: void <init>()> -> <android.app.Activity: void <init>()>
<com.chinat2t.yun1007.WelComeActivity: void onCreate(android.os.Bundle)> -> <android.app.Activity: void onCreate(android.os.Bundle)>
<com.chinat2t.yun1007.util.MCResource: com.chinat2t.yun1007.util.MCResource getInstance(android.content.Context)> -> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
<com.chinat2t.yun1007.util.MCResource: void <init>(android.content.Context)> -> <java.lang.Object: void <init>()>
<com.chinat2t.yun1007.util.MCResource: void <init>(android.content.Context)> -> <android.content.ContextWrapper: java.lang.String getPackageName()>
<com.chinat2t.yun1007.util.MCResource: void <init>(android.content.Context)> -> <android.content.ContextWrapper: android.content.res.Resources getResources()>
<com.chinat2t.yun1007.util.MCResource: com.chinat2t.yun1007.util.MCResource getInstance(android.content.Context)> -> <com.chinat2t.yun1007.util.MCResource: void <init>(android.content.Context)>
<com.chinat2t.yun1007.WelComeActivity: void onCreate(android.os.Bundle)> -> <com.chinat2t.yun1007.util.MCResource: com.chinat2t.yun1007.util.MCResource getInstance(android.content.Context)>
<com.chinat2t.yun1007.util.MCResource: int getLayoutId(java.lang.String)> -> <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<com.chinat2t.yun1007.WelComeActivity: void onCreate(android.os.Bundle)> -> <com.chinat2t.yun1007.util.MCResource: int getLayoutId(java.lang.String)>
<com.chinat2t.yun1007.WelComeActivity: void onCreate(android.os.Bundle)> -> <android.app.Activity: void setContentView(int)>
<com.chinat2t.yun1007.util.SysApplication: void <init>()> -> <android.app.Application: void <init>()>
<com.chinat2t.yun1007.util.SysApplication: void <init>()> -> <java.util.LinkedList: void <init>()>
<com.chinat2t.yun1007.util.SysApplication: com.chinat2t.yun1007.util.SysApplication getInstance()> -> <com.chinat2t.yun1007.util.SysApplication: void <init>()>
<com.chinat2t.yun1007.WelComeActivity: void onCreate(android.os.Bundle)> -> <com.chinat2t.yun1007.util.SysApplication: com.chinat2t.yun1007.util.SysApplication getInstance()>
<com.chinat2t.yun1007.util.SysApplication: void addActivity(android.app.Activity)> -> <java.util.AbstractList: boolean add(java.lang.Object)>
<com.chinat2t.yun1007.WelComeActivity: void onCreate(android.os.Bundle)> -> <com.chinat2t.yun1007.util.SysApplication: void addActivity(android.app.Activity)>
<com.chinat2t.yun1007.WelComeActivity: void onCreate(android.os.Bundle)> -> <com.chinat2t.yun1007.WelComeActivity$Taskk: void <init>(com.chinat2t.yun1007.WelComeActivity,com.chinat2t.yun1007.WelComeActivity$1)>
<com.chinat2t.yun1007.WelComeActivity: void onCreate(android.os.Bundle)> -> <java.lang.Thread: void <init>(java.lang.Runnable)>
<com.chinat2t.yun1007.WelComeActivity: void onCreate(android.os.Bundle)> -> <java.lang.Thread: void start()>
<com.chinat2t.yun1007.WelComeActivity: void loadMainUI()> -> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
[ Intent sent ]
caller=<com.chinat2t.yun1007.WelComeActivity: void loadMainUI()>
callsite=virtualinvoke $r0.<com.chinat2t.yun1007.WelComeActivity: void startActivity(android.content.Intent)>($r1)
	Action=null
	PackageName=null
	DataString=null
	DataURI=null
	Scheme=null
	Flags=0
	Type=null
	Extras=null
	Component=ComponentInfo{com.chinat2t10513zw.templte/com.chinat2t.yun1007.MenuActivity}
<com.chinat2t.yun1007.WelComeActivity: void loadMainUI()> -> <android.app.Activity: void startActivity(android.content.Intent)>
<com.chinat2t.yun1007.WelComeActivity: void loadMainUI()> -> <android.app.Activity: void finish()>
<com.chinat2t.yun1007.WelComeActivity: void access$100(com.chinat2t.yun1007.WelComeActivity)> -> <com.chinat2t.yun1007.WelComeActivity: void loadMainUI()>
<com.chinat2t.yun1007.MenuActivity: void <init>()> -> <android.app.TabActivity: void <init>()>
<com.chinat2t.yun1007.MenuActivity: void onCreate(android.os.Bundle)> -> <com.chinat2t.yun1007.util.MCResource: com.chinat2t.yun1007.util.MCResource getInstance(android.content.Context)>
<com.chinat2t.yun1007.MenuActivity: void onCreate(android.os.Bundle)> -> <android.app.ActivityGroup: void onCreate(android.os.Bundle)>
<com.chinat2t.yun1007.util.MCResource: int getLayoutId(java.lang.String)> -> <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<com.chinat2t.yun1007.MenuActivity: void onCreate(android.os.Bundle)> -> <com.chinat2t.yun1007.util.MCResource: int getLayoutId(java.lang.String)>
<com.chinat2t.yun1007.LeftSliderLayout: void <init>(android.content.Context,android.util.AttributeSet,int)> -> <android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.chinat2t.yun1007.LeftSliderLayout: void <init>(android.content.Context,android.util.AttributeSet,int)> -> <android.widget.Scroller: void <init>(android.content.Context)>
<com.chinat2t.yun1007.LeftSliderLayout: void <init>(android.content.Context,android.util.AttributeSet,int)> -> <android.view.View: android.content.Context getContext()>
<com.chinat2t.yun1007.LeftSliderLayout: void <init>(android.content.Context,android.util.AttributeSet,int)> -> <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>
<com.chinat2t.yun1007.LeftSliderLayout: void <init>(android.content.Context,android.util.AttributeSet,int)> -> <android.view.ViewConfiguration: int getScaledTouchSlop()>
<com.chinat2t.yun1007.LeftSliderLayout: void <init>(android.content.Context,android.util.AttributeSet,int)> -> <android.view.View: android.content.res.Resources getResources()>
<com.chinat2t.yun1007.LeftSliderLayout: void <init>(android.content.Context,android.util.AttributeSet,int)> -> <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<com.chinat2t.yun1007.LeftSliderLayout: void <init>(android.content.Context,android.util.AttributeSet)> -> <com.chinat2t.yun1007.LeftSliderLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.chinat2t.yun1007.MenuActivity: void onCreate(android.os.Bundle)> -> <android.app.Activity: void setContentView(int)>
<com.chinat2t.yun1007.MenuActivity: void onCreate(android.os.Bundle)> -> <com.chinat2t.yun1007.util.SysApplication: com.chinat2t.yun1007.util.SysApplication getInstance()>
<com.chinat2t.yun1007.util.SysApplication: void addActivity(android.app.Activity)> -> <java.util.AbstractList: boolean add(java.lang.Object)>
<com.chinat2t.yun1007.MenuActivity: void onCreate(android.os.Bundle)> -> <com.chinat2t.yun1007.util.SysApplication: void addActivity(android.app.Activity)>
<com.chinat2t.yun1007.MenuActivity: void onCreate(android.os.Bundle)> -> <android.app.Activity: android.view.Window getWindow()>
<com.chinat2t.yun1007.MenuActivity: void onCreate(android.os.Bundle)> -> <android.view.Window: android.view.WindowManager getWindowManager()>
<com.chinat2t.yun1007.MenuActivity: void onCreate(android.os.Bundle)> -> <android.view.WindowManager: android.view.Display getDefaultDisplay()>
<com.chinat2t.yun1007.MenuActivity: void onCreate(android.os.Bundle)> -> <android.view.Display: int getWidth()>
<com.chinat2t.yun1007.MenuActivity: int px2dip(android.content.Context,float)> -> <android.content.ContextWrapper: android.content.res.Resources getResources()>
<com.chinat2t.yun1007.MenuActivity: int px2dip(android.content.Context,float)> -> <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<com.chinat2t.yun1007.MenuActivity: void onCreate(android.os.Bundle)> -> <com.chinat2t.yun1007.MenuActivity: int px2dip(android.content.Context,float)>
<com.chinat2t.yun1007.MenuActivity: int dip2px(android.content.Context,float)> -> <android.content.ContextWrapper: android.content.res.Resources getResources()>
<com.chinat2t.yun1007.MenuActivity: int dip2px(android.content.Context,float)> -> <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<com.chinat2t.yun1007.MenuActivity: void onCreate(android.os.Bundle)> -> <com.chinat2t.yun1007.MenuActivity: int dip2px(android.content.Context,float)>
<com.chinat2t.yun1007.util.MCResource: int getViewId(java.lang.String)> -> <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<com.chinat2t.yun1007.MenuActivity: void onCreate(android.os.Bundle)> -> <com.chinat2t.yun1007.util.MCResource: int getViewId(java.lang.String)>
<com.chinat2t.yun1007.MenuActivity: void onCreate(android.os.Bundle)> -> <android.app.Activity: android.view.View findViewById(int)>
<com.chinat2t.yun1007.util.MCResource: int getViewId(java.lang.String)> -> <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<com.chinat2t.yun1007.MenuActivity: void onCreate(android.os.Bundle)> -> <com.chinat2t.yun1007.util.MCResource: int getViewId(java.lang.String)>
<com.chinat2t.yun1007.MenuActivity: void onCreate(android.os.Bundle)> -> <android.app.Activity: android.view.View findViewById(int)>
<com.chinat2t.yun1007.MenuActivity: void onCreate(android.os.Bundle)> -> <com.chinat2t.yun1007.MenuActivity$MoreAdapter: void <init>(com.chinat2t.yun1007.MenuActivity,android.content.Context,java.lang.String[])>
<com.chinat2t.yun1007.MenuActivity: void onCreate(android.os.Bundle)> -> <android.widget.ListView: void setAdapter(android.widget.ListAdapter)>
<com.chinat2t.yun1007.MenuActivity: void onCreate(android.os.Bundle)> -> <com.chinat2t.yun1007.MenuActivity$1: void <init>(com.chinat2t.yun1007.MenuActivity)>
<com.chinat2t.yun1007.MenuActivity: void onCreate(android.os.Bundle)> -> <android.widget.AdapterView: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)>
<com.chinat2t.yun1007.util.MCResource: int getViewId(java.lang.String)> -> <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<com.chinat2t.yun1007.MenuActivity: void onCreate(android.os.Bundle)> -> <com.chinat2t.yun1007.util.MCResource: int getViewId(java.lang.String)>
<com.chinat2t.yun1007.MenuActivity: void onCreate(android.os.Bundle)> -> <android.app.Activity: android.view.View findViewById(int)>
<com.chinat2t.yun1007.MenuActivity: void onCreate(android.os.Bundle)> -> <com.chinat2t.yun1007.MenuActivity$2: void <init>(com.chinat2t.yun1007.MenuActivity)>
<com.chinat2t.yun1007.MenuActivity: void onCreate(android.os.Bundle)> -> <android.view.View: void setOnClickListener(android.view.View$OnClickListener)>
<com.chinat2t.yun1007.util.MCResource: int getViewId(java.lang.String)> -> <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<com.chinat2t.yun1007.MenuActivity: void onCreate(android.os.Bundle)> -> <com.chinat2t.yun1007.util.MCResource: int getViewId(java.lang.String)>
<com.chinat2t.yun1007.MenuActivity: void onCreate(android.os.Bundle)> -> <android.app.Activity: android.view.View findViewById(int)>
<com.chinat2t.yun1007.MenuActivity: void onCreate(android.os.Bundle)> -> <com.chinat2t.yun1007.MenuActivity$3: void <init>(com.chinat2t.yun1007.MenuActivity)>
<com.chinat2t.yun1007.MenuActivity: void onCreate(android.os.Bundle)> -> <android.view.View: void setOnClickListener(android.view.View$OnClickListener)>
<com.chinat2t.yun1007.util.MCResource: int getViewId(java.lang.String)> -> <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<com.chinat2t.yun1007.MenuActivity: void onCreate(android.os.Bundle)> -> <com.chinat2t.yun1007.util.MCResource: int getViewId(java.lang.String)>
<com.chinat2t.yun1007.MenuActivity: void onCreate(android.os.Bundle)> -> <android.app.Activity: android.view.View findViewById(int)>
<com.chinat2t.yun1007.MenuActivity: void onCreate(android.os.Bundle)> -> <com.chinat2t.yun1007.LeftSliderLayout: void setOnLeftSliderLayoutListener(com.chinat2t.yun1007.LeftSliderLayout$OnLeftSliderLayoutStateListener)>
<com.chinat2t.yun1007.MenuActivity: void initView()> -> <android.app.TabActivity: android.widget.TabHost getTabHost()>
<com.chinat2t.yun1007.util.MCResource: int getViewId(java.lang.String)> -> <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<com.chinat2t.yun1007.MenuActivity: void initView()> -> <com.chinat2t.yun1007.util.MCResource: int getViewId(java.lang.String)>
<com.chinat2t.yun1007.MenuActivity: void initView()> -> <android.app.Activity: android.view.View findViewById(int)>
<com.chinat2t.yun1007.util.MCResource: int getViewId(java.lang.String)> -> <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<com.chinat2t.yun1007.MenuActivity: void initView()> -> <com.chinat2t.yun1007.util.MCResource: int getViewId(java.lang.String)>
<com.chinat2t.yun1007.MenuActivity: void initView()> -> <android.app.Activity: android.view.View findViewById(int)>
<com.chinat2t.yun1007.util.MCResource: int getViewId(java.lang.String)> -> <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<com.chinat2t.yun1007.MenuActivity: void initView()> -> <com.chinat2t.yun1007.util.MCResource: int getViewId(java.lang.String)>
<com.chinat2t.yun1007.MenuActivity: void initView()> -> <android.app.Activity: android.view.View findViewById(int)>
<com.chinat2t.yun1007.util.MCResource: int getViewId(java.lang.String)> -> <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<com.chinat2t.yun1007.MenuActivity: void initView()> -> <com.chinat2t.yun1007.util.MCResource: int getViewId(java.lang.String)>
<com.chinat2t.yun1007.MenuActivity: void initView()> -> <android.app.Activity: android.view.View findViewById(int)>
<com.chinat2t.yun1007.util.MCResource: int getViewId(java.lang.String)> -> <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<com.chinat2t.yun1007.MenuActivity: void initView()> -> <com.chinat2t.yun1007.util.MCResource: int getViewId(java.lang.String)>
<com.chinat2t.yun1007.MenuActivity: void initView()> -> <android.app.Activity: android.view.View findViewById(int)>
<com.chinat2t.yun1007.util.MCResource: int getViewId(java.lang.String)> -> <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<com.chinat2t.yun1007.MenuActivity: void initView()> -> <com.chinat2t.yun1007.util.MCResource: int getViewId(java.lang.String)>
<com.chinat2t.yun1007.MenuActivity: void initView()> -> <android.app.Activity: android.view.View findViewById(int)>
<com.chinat2t.yun1007.util.MCResource: int getViewId(java.lang.String)> -> <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<com.chinat2t.yun1007.MenuActivity: void initView()> -> <com.chinat2t.yun1007.util.MCResource: int getViewId(java.lang.String)>
<com.chinat2t.yun1007.MenuActivity: void initView()> -> <android.app.Activity: android.view.View findViewById(int)>
<com.chinat2t.yun1007.util.MCResource: int getViewId(java.lang.String)> -> <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<com.chinat2t.yun1007.MenuActivity: void initView()> -> <com.chinat2t.yun1007.util.MCResource: int getViewId(java.lang.String)>
<com.chinat2t.yun1007.MenuActivity: void initView()> -> <android.app.Activity: android.view.View findViewById(int)>
<com.chinat2t.yun1007.util.MCResource: int getViewId(java.lang.String)> -> <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<com.chinat2t.yun1007.MenuActivity: void initView()> -> <com.chinat2t.yun1007.util.MCResource: int getViewId(java.lang.String)>
<com.chinat2t.yun1007.MenuActivity: void initView()> -> <android.app.Activity: android.view.View findViewById(int)>
<com.chinat2t.yun1007.util.MCResource: int getViewId(java.lang.String)> -> <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<com.chinat2t.yun1007.MenuActivity: void initView()> -> <com.chinat2t.yun1007.util.MCResource: int getViewId(java.lang.String)>
<com.chinat2t.yun1007.MenuActivity: void initView()> -> <android.app.Activity: android.view.View findViewById(int)>
<com.chinat2t.yun1007.MenuActivity: void initView()> -> <android.view.View: void setOnClickListener(android.view.View$OnClickListener)>
<com.chinat2t.yun1007.MenuActivity: void initView()> -> <android.view.View: void setOnClickListener(android.view.View$OnClickListener)>
<com.chinat2t.yun1007.MenuActivity: void initView()> -> <android.view.View: void setOnClickListener(android.view.View$OnClickListener)>
<com.chinat2t.yun1007.MenuActivity: void initView()> -> <android.view.View: void setOnClickListener(android.view.View$OnClickListener)>
<com.chinat2t.yun1007.MenuActivity: void initView()> -> <android.view.View: void setOnClickListener(android.view.View$OnClickListener)>
<com.chinat2t.yun1007.util.MCResource: int getViewId(java.lang.String)> -> <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<com.chinat2t.yun1007.MenuActivity: void initView()> -> <com.chinat2t.yun1007.util.MCResource: int getViewId(java.lang.String)>
<com.chinat2t.yun1007.MenuActivity: void initView()> -> <android.app.Activity: android.view.View findViewById(int)>
<com.chinat2t.yun1007.MenuActivity: void initView()> -> <com.chinat2t.yun1007.MenuActivity$4: void <init>(com.chinat2t.yun1007.MenuActivity)>
<com.chinat2t.yun1007.MenuActivity: void initView()> -> <android.view.View: void setOnClickListener(android.view.View$OnClickListener)>
<com.chinat2t.yun1007.util.MCResource: int getViewId(java.lang.String)> -> <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<com.chinat2t.yun1007.MenuActivity: void initView()> -> <com.chinat2t.yun1007.util.MCResource: int getViewId(java.lang.String)>
<com.chinat2t.yun1007.MenuActivity: void initView()> -> <android.app.Activity: android.view.View findViewById(int)>
<com.chinat2t.yun1007.MenuActivity: void initView()> -> <com.chinat2t.yun1007.MenuActivity$5: void <init>(com.chinat2t.yun1007.MenuActivity)>
<com.chinat2t.yun1007.MenuActivity: void initView()> -> <android.view.View: void setOnClickListener(android.view.View$OnClickListener)>
<com.chinat2t.yun1007.util.MCResource: int getViewId(java.lang.String)> -> <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<com.chinat2t.yun1007.MenuActivity: void initView()> -> <com.chinat2t.yun1007.util.MCResource: int getViewId(java.lang.String)>
<com.chinat2t.yun1007.MenuActivity: void initView()> -> <android.app.Activity: android.view.View findViewById(int)>
<com.chinat2t.yun1007.MenuActivity: void initView()> -> <com.chinat2t.yun1007.MenuActivity$6: void <init>(com.chinat2t.yun1007.MenuActivity)>
<com.chinat2t.yun1007.MenuActivity: void initView()> -> <android.view.View: void setOnClickListener(android.view.View$OnClickListener)>
<com.chinat2t.yun1007.util.MCResource: int getViewId(java.lang.String)> -> <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<com.chinat2t.yun1007.MenuActivity: void initView()> -> <com.chinat2t.yun1007.util.MCResource: int getViewId(java.lang.String)>
<com.chinat2t.yun1007.MenuActivity: void initView()> -> <android.app.Activity: android.view.View findViewById(int)>
<com.chinat2t.yun1007.MenuActivity: void initView()> -> <com.chinat2t.yun1007.MenuActivity$7: void <init>(com.chinat2t.yun1007.MenuActivity)>
<com.chinat2t.yun1007.MenuActivity: void initView()> -> <android.view.View: void setOnClickListener(android.view.View$OnClickListener)>
<com.chinat2t.yun1007.util.MCResource: int getViewId(java.lang.String)> -> <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<com.chinat2t.yun1007.MenuActivity: void initView()> -> <com.chinat2t.yun1007.util.MCResource: int getViewId(java.lang.String)>
<com.chinat2t.yun1007.MenuActivity: void initView()> -> <android.app.Activity: android.view.View findViewById(int)>
<com.chinat2t.yun1007.MenuActivity: void initView()> -> <com.chinat2t.yun1007.MenuActivity$8: void <init>(com.chinat2t.yun1007.MenuActivity)>
<com.chinat2t.yun1007.MenuActivity: void initView()> -> <android.view.View: void setOnClickListener(android.view.View$OnClickListener)>
<com.chinat2t.yun1007.util.MCResource: int getViewId(java.lang.String)> -> <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<com.chinat2t.yun1007.MenuActivity: void initView()> -> <com.chinat2t.yun1007.util.MCResource: int getViewId(java.lang.String)>
<com.chinat2t.yun1007.MenuActivity: void initView()> -> <android.app.Activity: android.view.View findViewById(int)>
<com.chinat2t.yun1007.MenuActivity: void initView()> -> <com.chinat2t.yun1007.MenuActivity$9: void <init>(com.chinat2t.yun1007.MenuActivity)>
<com.chinat2t.yun1007.MenuActivity: void initView()> -> <android.view.View: void setOnClickListener(android.view.View$OnClickListener)>
<com.chinat2t.yun1007.util.MCResource: int getViewId(java.lang.String)> -> <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<com.chinat2t.yun1007.MenuActivity: void initView()> -> <com.chinat2t.yun1007.util.MCResource: int getViewId(java.lang.String)>
<com.chinat2t.yun1007.MenuActivity: void initView()> -> <android.app.Activity: android.view.View findViewById(int)>
<com.chinat2t.yun1007.MenuActivity: void initView()> -> <com.chinat2t.yun1007.MenuActivity$10: void <init>(com.chinat2t.yun1007.MenuActivity)>
<com.chinat2t.yun1007.MenuActivity: void initView()> -> <android.view.View: void setOnClickListener(android.view.View$OnClickListener)>
<com.chinat2t.yun1007.MenuActivity: void onCreate(android.os.Bundle)> -> <com.chinat2t.yun1007.MenuActivity: void initView()>
<com.chinat2t.yun1007.MenuActivity: void prepareIntent()> -> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<com.chinat2t.yun1007.MenuActivity: void prepareIntent()> -> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<com.chinat2t.yun1007.MenuActivity: void prepareIntent()> -> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<com.chinat2t.yun1007.MenuActivity: void prepareIntent()> -> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<com.chinat2t.yun1007.MenuActivity: void prepareIntent()> -> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<com.chinat2t.yun1007.MenuActivity: void onCreate(android.os.Bundle)> -> <com.chinat2t.yun1007.MenuActivity: void prepareIntent()>
<com.chinat2t.yun1007.MenuActivity: android.widget.TabHost$TabSpec buildTabSpec(java.lang.String,java.lang.String,android.content.Intent)> -> <android.widget.TabHost: android.widget.TabHost$TabSpec newTabSpec(java.lang.String)>
<com.chinat2t.yun1007.MenuActivity: android.widget.TabHost$TabSpec buildTabSpec(java.lang.String,java.lang.String,android.content.Intent)> -> <android.widget.TabHost$TabSpec: android.widget.TabHost$TabSpec setIndicator(java.lang.CharSequence)>
<com.chinat2t.yun1007.MenuActivity: android.widget.TabHost$TabSpec buildTabSpec(java.lang.String,java.lang.String,android.content.Intent)> -> <android.widget.TabHost$TabSpec: android.widget.TabHost$TabSpec setContent(android.content.Intent)>
<com.chinat2t.yun1007.MenuActivity: void setupIntent()> -> <com.chinat2t.yun1007.MenuActivity: android.widget.TabHost$TabSpec buildTabSpec(java.lang.String,java.lang.String,android.content.Intent)>
<com.chinat2t.yun1007.util.ThreadPoolManager: void <init>()> -> <java.lang.Object: void <init>()>
<com.chinat2t.yun1007.util.ThreadPoolManager: void <init>()> -> <java.lang.Runtime: java.lang.Runtime getRuntime()>
<com.chinat2t.yun1007.util.ThreadPoolManager: void <init>()> -> <java.lang.Runtime: int availableProcessors()>
<com.chinat2t.yun1007.util.ThreadPoolManager: void <init>()> -> <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newFixedThreadPool(int)>
<com.chinat2t.yun1007.util.ThreadPoolManager: void <clinit>()> -> <com.chinat2t.yun1007.util.ThreadPoolManager: void <init>()>
<com.chinat2t.yun1007.Menu1Activity: void <init>()> -> <com.chinat2t.yun1007.BaseActivity: void <init>()>
<com.chinat2t.yun1007.Menu1Activity: void <init>()> -> <java.util.ArrayList: void <init>()>
<com.chinat2t.yun1007.util.AsyncImageLoader: void <clinit>()> -> <java.lang.StringBuilder: void <init>()>
<com.chinat2t.yun1007.util.AsyncImageLoader: void <clinit>()> -> <android.os.Environment: java.io.File getExternalStorageDirectory()>
<com.chinat2t.yun1007.util.AsyncImageLoader: void <clinit>()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<com.chinat2t.yun1007.util.AsyncImageLoader: void <clinit>()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.chinat2t.yun1007.util.AsyncImageLoader: void <clinit>()> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.chinat2t.yun1007.util.AsyncImageLoader: void <init>()> -> <java.lang.Object: void <init>()>
<com.chinat2t.yun1007.util.AsyncImageLoader: void <init>()> -> <java.util.HashMap: void <init>()>
<com.chinat2t.yun1007.Menu1Activity: void <init>()> -> <com.chinat2t.yun1007.util.AsyncImageLoader: void <init>()>
<com.chinat2t.yun1007.util.ImageLoader: void <init>(android.content.Context)> -> <java.lang.Object: void <init>()>
<com.chinat2t.yun1007.util.ImageLoader: void <init>(android.content.Context)> -> <java.util.WeakHashMap: void <init>()>
<com.chinat2t.yun1007.util.ImageLoader: void <init>(android.content.Context)> -> <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>
<com.chinat2t.yun1007.util.MemoryCache: void <init>()> -> <java.lang.Object: void <init>()>
<com.chinat2t.yun1007.util.MemoryCache: void <init>()> -> <java.util.LinkedHashMap: void <init>(int,float,boolean)>
<com.chinat2t.yun1007.util.MemoryCache: void <init>()> -> <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>
<com.chinat2t.yun1007.util.MemoryCache: void <init>()> -> <java.lang.Runtime: java.lang.Runtime getRuntime()>
<com.chinat2t.yun1007.util.MemoryCache: void <init>()> -> <java.lang.Runtime: long maxMemory()>
<com.chinat2t.yun1007.util.MemoryCache: void setLimit(long)> -> <java.lang.StringBuilder: void <init>()>
<com.chinat2t.yun1007.util.MemoryCache: void setLimit(long)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.chinat2t.yun1007.util.MemoryCache: void setLimit(long)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(double)>
<com.chinat2t.yun1007.util.MemoryCache: void setLimit(long)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.chinat2t.yun1007.util.MemoryCache: void setLimit(long)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.chinat2t.yun1007.util.MemoryCache: void setLimit(long)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.chinat2t.yun1007.util.MemoryCache: void <init>()> -> <com.chinat2t.yun1007.util.MemoryCache: void setLimit(long)>
<com.chinat2t.yun1007.util.ImageLoader: void <init>(android.content.Context)> -> <com.chinat2t.yun1007.util.MemoryCache: void <init>()>
<com.chinat2t.yun1007.util.CommonLog: void <init>()> -> <java.lang.Object: void <init>()>
<com.chinat2t.yun1007.util.LogFactory: com.chinat2t.yun1007.util.CommonLog createLog()> -> <com.chinat2t.yun1007.util.CommonLog: void <init>()>
<com.chinat2t.yun1007.util.LogFactory: com.chinat2t.yun1007.util.CommonLog createLog()> -> <com.chinat2t.yun1007.util.CommonLog: void setTag(java.lang.String)>
<com.chinat2t.yun1007.util.CommonUtil: void <clinit>()> -> <com.chinat2t.yun1007.util.LogFactory: com.chinat2t.yun1007.util.CommonLog createLog()>
<com.content.ugly.meter.FirstActiviy: void <init>()> -> <android.app.Activity: void <init>()>
<com.content.ugly.meter.FirstActiviy: void <init>()> -> <java.lang.Class: java.lang.String toString()>
<com.content.ugly.meter.FirstActiviy: void <init>()> -> <com.content.ugly.meter.FirstActiviy$1: void <init>(com.content.ugly.meter.FirstActiviy)>
<com.content.ugly.meter.FirstActiviy: void <init>()> -> <com.content.ugly.meter.FirstActiviy$2: void <init>(com.content.ugly.meter.FirstActiviy)>
<com.content.ugly.meter.FirstActiviy: void <init>()> -> <com.content.ugly.meter.FirstActiviy$3: void <init>(com.content.ugly.meter.FirstActiviy)>
<com.content.ugly.meter.FirstActiviy: void <init>()> -> <com.content.ugly.meter.FirstActiviy$4: void <init>(com.content.ugly.meter.FirstActiviy)>
<com.content.ugly.meter.FirstActiviy: void onCreate(android.os.Bundle)> -> <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
<com.content.ugly.meter.FirstActiviy: void onCreate(android.os.Bundle)> -> <android.widget.Toast: void show()>
<com.content.ugly.meter.FirstActiviy: void onCreate(android.os.Bundle)> -> <android.app.Activity: void onCreate(android.os.Bundle)>
<com.google.android.apps.analytics.GoogleAnalyticsTracker: void <init>()> -> <java.lang.Object: void <init>()>
<com.google.android.apps.analytics.GoogleAnalyticsTracker: void <init>()> -> <java.util.HashMap: void <init>()>
<com.google.android.apps.analytics.GoogleAnalyticsTracker: void <init>()> -> <java.util.HashMap: void <init>()>
<com.google.android.apps.analytics.GoogleAnalyticsTracker: void <init>()> -> <com.google.android.apps.analytics.GoogleAnalyticsTracker$1: void <init>(com.google.android.apps.analytics.GoogleAnalyticsTracker)>
<com.google.android.apps.analytics.GoogleAnalyticsTracker: void <clinit>()> -> <com.google.android.apps.analytics.GoogleAnalyticsTracker: void <init>()>
<com.content.ugly.meter.utils.TrackerHelper: com.google.android.apps.analytics.GoogleAnalyticsTracker getInstance(android.content.Context,int)> -> <com.google.android.apps.analytics.GoogleAnalyticsTracker: com.google.android.apps.analytics.GoogleAnalyticsTracker getInstance()>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: void <init>()>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: void <init>()>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: void <init>()>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: void <init>()>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: void <init>()>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: void <init>()>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: void <init>()>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.google.android.apps.analytics.PersistentHitStore: void <init>(android.content.Context,java.lang.String,int)> -> <java.lang.Object: void <init>()>
<com.google.android.apps.analytics.PersistentHitStore: void <init>(android.content.Context,java.lang.String,int)> -> <com.google.android.apps.analytics.PersistentHitStore$DataBaseHelper: void <init>(android.content.Context,java.lang.String,int,com.google.android.apps.analytics.PersistentHitStore)>
<com.google.android.apps.analytics.PersistentHitStore: void loadExistingSession()> -> <android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>
<com.google.android.apps.analytics.PersistentHitStore: void loadExistingSession(android.database.sqlite.SQLiteDatabase)> -> <android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: void loadExistingSession(android.database.sqlite.SQLiteDatabase)> -> <android.database.Cursor: boolean moveToFirst()>
<com.google.android.apps.analytics.PersistentHitStore: void loadExistingSession(android.database.sqlite.SQLiteDatabase)> -> <java.security.SecureRandom: void <init>()>
<com.google.android.apps.analytics.PersistentHitStore: void loadExistingSession(android.database.sqlite.SQLiteDatabase)> -> <java.util.Random: int nextInt()>
<com.google.android.apps.analytics.PersistentHitStore: void loadExistingSession(android.database.sqlite.SQLiteDatabase)> -> <android.database.Cursor: void close()>
<com.google.android.apps.analytics.PersistentHitStore: void loadExistingSession(android.database.sqlite.SQLiteDatabase)> -> <android.content.ContentValues: void <init>()>
<com.google.android.apps.analytics.PersistentHitStore: void loadExistingSession(android.database.sqlite.SQLiteDatabase)> -> <java.lang.Long: java.lang.Long valueOf(long)>
<com.google.android.apps.analytics.PersistentHitStore: void loadExistingSession(android.database.sqlite.SQLiteDatabase)> -> <android.content.ContentValues: void put(java.lang.String,java.lang.Long)>
<com.google.android.apps.analytics.PersistentHitStore: void loadExistingSession(android.database.sqlite.SQLiteDatabase)> -> <java.lang.Long: java.lang.Long valueOf(long)>
<com.google.android.apps.analytics.PersistentHitStore: void loadExistingSession(android.database.sqlite.SQLiteDatabase)> -> <android.content.ContentValues: void put(java.lang.String,java.lang.Long)>
<com.google.android.apps.analytics.PersistentHitStore: void loadExistingSession(android.database.sqlite.SQLiteDatabase)> -> <java.lang.Long: java.lang.Long valueOf(long)>
<com.google.android.apps.analytics.PersistentHitStore: void loadExistingSession(android.database.sqlite.SQLiteDatabase)> -> <android.content.ContentValues: void put(java.lang.String,java.lang.Long)>
<com.google.android.apps.analytics.PersistentHitStore: void loadExistingSession(android.database.sqlite.SQLiteDatabase)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<com.google.android.apps.analytics.PersistentHitStore: void loadExistingSession(android.database.sqlite.SQLiteDatabase)> -> <android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>
<com.google.android.apps.analytics.PersistentHitStore: void loadExistingSession(android.database.sqlite.SQLiteDatabase)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<com.google.android.apps.analytics.PersistentHitStore: void loadExistingSession(android.database.sqlite.SQLiteDatabase)> -> <android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>
<com.google.android.apps.analytics.PersistentHitStore: void loadExistingSession(android.database.sqlite.SQLiteDatabase)> -> <android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>
<com.google.android.apps.analytics.PersistentHitStore: void loadExistingSession()> -> <com.google.android.apps.analytics.PersistentHitStore: void loadExistingSession(android.database.sqlite.SQLiteDatabase)>
<com.google.android.apps.analytics.PersistentHitStore: void <init>(android.content.Context,java.lang.String,int)> -> <com.google.android.apps.analytics.PersistentHitStore: void loadExistingSession()>
<com.google.android.apps.analytics.PersistentHitStore: void <init>(android.content.Context)> -> <com.google.android.apps.analytics.PersistentHitStore: void <init>(android.content.Context,java.lang.String,int)>
<com.google.android.apps.analytics.GoogleAnalyticsTracker: void start(java.lang.String,int,android.content.Context,boolean)> -> <com.google.android.apps.analytics.PersistentHitStore: void <init>(android.content.Context)>
<com.google.android.apps.analytics.GoogleAnalyticsTracker: void start(java.lang.String,int,android.content.Context,boolean)> -> <com.google.android.apps.analytics.PersistentHitStore: void setAnonymizeIp(boolean)>
<com.google.android.apps.analytics.GoogleAnalyticsTracker: void start(java.lang.String,int,android.content.Context,boolean)> -> <com.google.android.apps.analytics.PersistentHitStore: void setSampleRate(int)>
<com.google.android.apps.analytics.NetworkDispatcher: void <init>(java.lang.String,java.lang.String,java.lang.String,int)> -> <java.lang.Object: void <init>()>
<com.google.android.apps.analytics.NetworkDispatcher: void <init>(java.lang.String,java.lang.String,java.lang.String,int)> -> <org.apache.http.HttpHost: void <init>(java.lang.String,int)>
<com.google.android.apps.analytics.NetworkDispatcher: void <init>(java.lang.String,java.lang.String,java.lang.String,int)> -> <java.util.Locale: java.util.Locale getDefault()>
<com.google.android.apps.analytics.NetworkDispatcher: void <init>(java.lang.String,java.lang.String,java.lang.String,int)> -> <java.util.Locale: java.lang.String getLanguage()>
<com.google.android.apps.analytics.NetworkDispatcher: void <init>(java.lang.String,java.lang.String,java.lang.String,int)> -> <java.util.Locale: java.lang.String getLanguage()>
<com.google.android.apps.analytics.NetworkDispatcher: void <init>(java.lang.String,java.lang.String,java.lang.String,int)> -> <java.lang.String: java.lang.String toLowerCase()>
<com.google.android.apps.analytics.NetworkDispatcher: void <init>(java.lang.String,java.lang.String,java.lang.String,int)> -> <java.util.Locale: java.lang.String getCountry()>
<com.google.android.apps.analytics.NetworkDispatcher: void <init>(java.lang.String,java.lang.String,java.lang.String,int)> -> <java.util.Locale: java.lang.String getCountry()>
<com.google.android.apps.analytics.NetworkDispatcher: void <init>(java.lang.String,java.lang.String,java.lang.String,int)> -> <java.lang.String: java.lang.String toLowerCase()>
<com.google.android.apps.analytics.NetworkDispatcher: void <init>(java.lang.String,java.lang.String,java.lang.String,int)> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.google.android.apps.analytics.NetworkDispatcher: void <init>(java.lang.String,java.lang.String)> -> <com.google.android.apps.analytics.NetworkDispatcher: void <init>(java.lang.String,java.lang.String,java.lang.String,int)>
<com.google.android.apps.analytics.GoogleAnalyticsTracker: void start(java.lang.String,int,android.content.Context,boolean)> -> <com.google.android.apps.analytics.NetworkDispatcher: void <init>(java.lang.String,java.lang.String)>
<com.google.android.apps.analytics.GoogleAnalyticsTracker: void start(java.lang.String,int,android.content.Context,boolean)> -> <com.google.android.apps.analytics.NetworkDispatcher: void setDryRun(boolean)>
<com.google.android.apps.analytics.GoogleAnalyticsTracker: void start(java.lang.String,int,android.content.Context,com.google.android.apps.analytics.HitStore,com.google.android.apps.analytics.Dispatcher,boolean)> -> <com.google.android.apps.analytics.GoogleAnalyticsTracker$DispatcherCallbacks: void <init>(com.google.android.apps.analytics.GoogleAnalyticsTracker)>
<com.google.android.apps.analytics.GoogleAnalyticsTracker: void start(java.lang.String,int,android.content.Context,com.google.android.apps.analytics.HitStore,com.google.android.apps.analytics.Dispatcher,boolean,com.google.android.apps.analytics.Dispatcher$Callbacks)> -> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
<com.google.android.apps.analytics.PersistentHitStore: int getNumStoredHits()> -> <android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>
<com.google.android.apps.analytics.PersistentHitStore: int getNumStoredHits()> -> <android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>
<com.google.android.apps.analytics.PersistentHitStore: int getNumStoredHits()> -> <android.database.Cursor: boolean moveToFirst()>
<com.google.android.apps.analytics.PersistentHitStore: int getNumStoredHits()> -> <android.database.Cursor: long getLong(int)>
<com.google.android.apps.analytics.PersistentHitStore: int getNumStoredHits()> -> <android.database.Cursor: void close()>
<com.google.android.apps.analytics.PersistentHitStore: void startNewVisit()> -> <com.google.android.apps.analytics.PersistentHitStore: int getNumStoredHits()>
<com.google.android.apps.analytics.GoogleAnalyticsTracker: void start(java.lang.String,int,android.content.Context,com.google.android.apps.analytics.HitStore,com.google.android.apps.analytics.Dispatcher,boolean,com.google.android.apps.analytics.Dispatcher$Callbacks)> -> <com.google.android.apps.analytics.PersistentHitStore: void startNewVisit()>
<com.google.android.apps.analytics.NetworkDispatcher: void init(com.google.android.apps.analytics.Dispatcher$Callbacks)> -> <com.google.android.apps.analytics.NetworkDispatcher: void stop()>
<com.google.android.apps.analytics.PipelinedRequester: void <init>(org.apache.http.HttpHost)> -> <org.apache.http.conn.scheme.PlainSocketFactory: void <init>()>
<com.google.android.apps.analytics.PipelinedRequester: void <init>(org.apache.http.HttpHost,org.apache.http.conn.scheme.SocketFactory)> -> <java.lang.Object: void <init>()>
<com.google.android.apps.analytics.PipelinedRequester: void <init>(org.apache.http.HttpHost,org.apache.http.conn.scheme.SocketFactory)> -> <org.apache.http.impl.DefaultHttpClientConnection: void <init>()>
<com.google.android.apps.analytics.PipelinedRequester: void <init>(org.apache.http.HttpHost)> -> <com.google.android.apps.analytics.PipelinedRequester: void <init>(org.apache.http.HttpHost,org.apache.http.conn.scheme.SocketFactory)>
<com.google.android.apps.analytics.NetworkDispatcher: void init(com.google.android.apps.analytics.Dispatcher$Callbacks)> -> <com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread: void <init>(com.google.android.apps.analytics.Dispatcher$Callbacks,java.lang.String,com.google.android.apps.analytics.NetworkDispatcher,com.google.android.apps.analytics.NetworkDispatcher$1)>
<com.google.android.apps.analytics.NetworkDispatcher: void init(com.google.android.apps.analytics.Dispatcher$Callbacks)> -> <java.lang.Thread: void start()>
<com.google.android.apps.analytics.GoogleAnalyticsTracker: void start(java.lang.String,int,android.content.Context,com.google.android.apps.analytics.HitStore,com.google.android.apps.analytics.Dispatcher,boolean,com.google.android.apps.analytics.Dispatcher$Callbacks)> -> <com.google.android.apps.analytics.NetworkDispatcher: void init(com.google.android.apps.analytics.Dispatcher$Callbacks)>
<com.google.android.apps.analytics.GoogleAnalyticsTracker: void start(java.lang.String,int,android.content.Context,com.google.android.apps.analytics.HitStore,com.google.android.apps.analytics.Dispatcher,boolean,com.google.android.apps.analytics.Dispatcher$Callbacks)> -> <android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<com.google.android.apps.analytics.GoogleAnalyticsTracker: void start(java.lang.String,int,android.content.Context,com.google.android.apps.analytics.HitStore,com.google.android.apps.analytics.Dispatcher,boolean,com.google.android.apps.analytics.Dispatcher$Callbacks)> -> <android.content.ContextWrapper: android.os.Looper getMainLooper()>
<com.google.android.apps.analytics.GoogleAnalyticsTracker: void start(java.lang.String,int,android.content.Context,com.google.android.apps.analytics.HitStore,com.google.android.apps.analytics.Dispatcher,boolean,com.google.android.apps.analytics.Dispatcher$Callbacks)> -> <android.os.Handler: void <init>(android.os.Looper)>
<com.google.android.apps.analytics.GoogleAnalyticsTracker: void maybeScheduleNextDispatch()> -> <android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>
<com.google.android.apps.analytics.GoogleAnalyticsTracker: void setDispatchPeriod(int)> -> <com.google.android.apps.analytics.GoogleAnalyticsTracker: void maybeScheduleNextDispatch()>
<com.google.android.apps.analytics.GoogleAnalyticsTracker: void start(java.lang.String,int,android.content.Context,com.google.android.apps.analytics.HitStore,com.google.android.apps.analytics.Dispatcher,boolean,com.google.android.apps.analytics.Dispatcher$Callbacks)> -> <com.google.android.apps.analytics.GoogleAnalyticsTracker: void setDispatchPeriod(int)>
<com.google.android.apps.analytics.GoogleAnalyticsTracker: void start(java.lang.String,int,android.content.Context,com.google.android.apps.analytics.HitStore,com.google.android.apps.analytics.Dispatcher,boolean)> -> <com.google.android.apps.analytics.GoogleAnalyticsTracker: void start(java.lang.String,int,android.content.Context,com.google.android.apps.analytics.HitStore,com.google.android.apps.analytics.Dispatcher,boolean,com.google.android.apps.analytics.Dispatcher$Callbacks)>
<com.google.android.apps.analytics.GoogleAnalyticsTracker: void start(java.lang.String,int,android.content.Context,boolean)> -> <com.google.android.apps.analytics.GoogleAnalyticsTracker: void start(java.lang.String,int,android.content.Context,com.google.android.apps.analytics.HitStore,com.google.android.apps.analytics.Dispatcher,boolean)>
<com.google.android.apps.analytics.GoogleAnalyticsTracker: void startNewSession(java.lang.String,int,android.content.Context)> -> <com.google.android.apps.analytics.GoogleAnalyticsTracker: void start(java.lang.String,int,android.content.Context,boolean)>
<com.content.ugly.meter.utils.TrackerHelper: com.google.android.apps.analytics.GoogleAnalyticsTracker getInstance(android.content.Context,int)> -> <com.google.android.apps.analytics.GoogleAnalyticsTracker: void startNewSession(java.lang.String,int,android.content.Context)>
<com.content.ugly.meter.utils.TrackerHelper: com.google.android.apps.analytics.GoogleAnalyticsTracker getInstance(android.content.Context)> -> <com.content.ugly.meter.utils.TrackerHelper: com.google.android.apps.analytics.GoogleAnalyticsTracker getInstance(android.content.Context,int)>
<com.content.ugly.meter.FirstActiviy: void onCreate(android.os.Bundle)> -> <com.content.ugly.meter.utils.TrackerHelper: com.google.android.apps.analytics.GoogleAnalyticsTracker getInstance(android.content.Context)>
<com.content.ugly.meter.FirstActiviy: void onCreate(android.os.Bundle)> -> <android.app.Activity: void setContentView(int)>
<com.content.ugly.meter.FirstActiviy: void initContentView()> -> <android.app.Activity: android.view.View findViewById(int)>
<com.content.ugly.meter.FirstActiviy: void initContentView()> -> <android.app.Activity: android.view.View findViewById(int)>
<com.content.ugly.meter.FirstActiviy: void initContentView()> -> <android.app.Activity: android.view.View findViewById(int)>
<com.content.ugly.meter.FirstActiviy: void initContentView()> -> <android.app.Activity: android.view.View findViewById(int)>
<com.content.ugly.meter.FirstActiviy: void initContentView()> -> <android.app.Activity: android.view.View findViewById(int)>
<com.content.ugly.meter.FirstActiviy: void initContentView()> -> <android.view.View: void setOnClickListener(android.view.View$OnClickListener)>
<com.content.ugly.meter.FirstActiviy: void initContentView()> -> <android.view.View: void setOnClickListener(android.view.View$OnClickListener)>
<com.content.ugly.meter.FirstActiviy: void initContentView()> -> <android.view.animation.AlphaAnimation: void <init>(float,float)>
<com.content.ugly.meter.FirstActiviy: void initContentView()> -> <android.view.animation.Animation: void setDuration(long)>
<com.content.ugly.meter.FirstActiviy: void initContentView()> -> <android.view.animation.Animation: void setAnimationListener(android.view.animation.Animation$AnimationListener)>
<com.content.ugly.meter.FirstActiviy: void initContentView()> -> <android.view.View: void startAnimation(android.view.animation.Animation)>
<com.content.ugly.meter.FirstActiviy: void onCreate(android.os.Bundle)> -> <com.content.ugly.meter.FirstActiviy: void initContentView()>
<com.appenda.Appenda: void <init>(int,int,java.lang.String,java.lang.String,android.content.Context,android.app.Activity)> -> <java.lang.Object: void <init>()>
<com.appenda.Appenda: void <init>(int,int,java.lang.String,java.lang.String,android.content.Context,android.app.Activity)> -> <com.appenda.Appenda: void setCurrentContext(android.content.Context)>
<com.appenda.Appenda: void <init>(int,int,java.lang.String,java.lang.String,android.content.Context,android.app.Activity)> -> <com.appenda.Appenda: void setCurrentActivity(android.app.Activity)>
<com.appenda.Appenda: void <init>(int,int,java.lang.String,java.lang.String,android.content.Context,android.app.Activity)> -> <com.appenda.Appenda: void setSubid(java.lang.String)>
<com.appenda.Appenda: void <init>(int,int,java.lang.String,java.lang.String,android.content.Context,android.app.Activity)> -> <com.appenda.Appenda: void setPublisher_key(java.lang.String)>
<com.appenda.Appenda: void <init>(int,int,java.lang.String,java.lang.String,android.content.Context,android.app.Activity)> -> <android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<com.appenda.Appenda: void <init>(int,int,java.lang.String,java.lang.String,android.content.Context,android.app.Activity)> -> <android.content.SharedPreferences: int getInt(java.lang.String,int)>
<com.appenda.Appenda: void <init>(int,int,java.lang.String,java.lang.String,android.content.Context,android.app.Activity)> -> <com.appenda.Appenda: void setApp_id(int)>
<com.appenda.Appenda: void <init>(int,int,java.lang.String,java.lang.String,android.content.Context,android.app.Activity)> -> <android.content.SharedPreferences: int getInt(java.lang.String,int)>
<com.appenda.Appenda: void <init>(int,int,java.lang.String,java.lang.String,android.content.Context,android.app.Activity)> -> <com.appenda.Appenda: void setPublisher_id(int)>
<com.appenda.Appenda: boolean isNetworkAvailable()> -> <com.appenda.Appenda: android.content.Context getCurrentContext()>
<com.appenda.Appenda: boolean isNetworkAvailable()> -> <android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<com.appenda.Appenda: boolean isNetworkAvailable()> -> <android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>
<com.appenda.Appenda: boolean isNetworkAvailable()> -> <android.net.NetworkInfo: android.net.NetworkInfo$State getState()>
<com.appenda.Appenda: void checkVersion(boolean)> -> <com.appenda.Appenda: boolean isNetworkAvailable()>
<com.appenda.Appenda: void checkVersion(boolean)> -> <com.appenda.Appenda: android.content.Context getCurrentContext()>
<com.appenda.Appenda: void checkVersion(boolean)> -> <android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<com.appenda.Appenda: void checkVersion(boolean)> -> <android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>
<com.appenda.Appenda: void checkVersion(boolean)> -> <android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>
<com.appenda.Appenda: void checkVersion(boolean)> -> <android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>
<com.appenda.Appenda: void checkVersion(boolean)> -> <android.content.SharedPreferences$Editor: boolean commit()>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.appenda.Appenda: java.lang.String getAndroidId()> -> <com.appenda.Appenda: android.content.Context getCurrentContext()>
<com.appenda.Appenda: java.lang.String getAndroidId()> -> <android.content.ContextWrapper: android.content.ContentResolver getContentResolver()>
<com.appenda.Appenda: java.lang.String getAndroidId()> -> <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <com.appenda.Appenda: java.lang.String getAndroidId()>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <com.appenda.Appenda: android.content.Context getCurrentContext()>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <android.content.ContextWrapper: java.lang.String getPackageName()>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.appenda.Appenda: java.lang.String getPhoneNumber()> -> <com.appenda.Appenda: android.content.Context getCurrentContext()>
<com.appenda.Appenda: java.lang.String getPhoneNumber()> -> <android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<com.appenda.Appenda: java.lang.String getPhoneNumber()> -> <android.telephony.TelephonyManager: java.lang.String getLine1Number()>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <com.appenda.Appenda: java.lang.String getPhoneNumber()>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <com.appenda.Appenda: int getApp_id()>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <com.appenda.Appenda: int getPublisher_id()>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <com.appenda.Appenda: java.lang.String getSubid()>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <java.text.SimpleDateFormat: void <init>(java.lang.String)>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <java.util.Date: void <init>()>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <java.text.DateFormat: java.lang.String format(java.util.Date)>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.appenda.Appenda: java.lang.String appendVariables(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.appenda.Appenda: java.lang.String getDeviceId()> -> <com.appenda.Appenda: android.content.Context getCurrentContext()>
<com.appenda.Appenda: java.lang.String getDeviceId()> -> <android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
