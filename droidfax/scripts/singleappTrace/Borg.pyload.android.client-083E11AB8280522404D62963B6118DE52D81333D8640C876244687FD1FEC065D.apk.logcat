--------- beginning of /dev/log/system
--------- beginning of /dev/log/main
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.lang.Character: java.lang.Character valueOf(char)>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.util.AbstractMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.io.FilterInputStream: int available()>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.io.DataInputStream: char readChar()>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.io.DataInputStream: int readInt()>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.io.DataInputStream: char readChar()>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.lang.Character: java.lang.Character valueOf(char)>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.util.AbstractMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.io.FilterInputStream: int available()>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.io.DataInputStream: char readChar()>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.io.DataInputStream: int readInt()>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.io.DataInputStream: char readChar()>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.lang.Character: java.lang.Character valueOf(char)>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.util.AbstractMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.io.FilterInputStream: int available()>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.io.DataInputStream: char readChar()>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.io.DataInputStream: int readInt()>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.io.DataInputStream: char readChar()>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.lang.Character: java.lang.Character valueOf(char)>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.util.AbstractMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.io.FilterInputStream: int available()>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.io.DataInputStream: char readChar()>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.io.DataInputStream: int readInt()>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.io.DataInputStream: char readChar()>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.lang.Character: java.lang.Character valueOf(char)>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.util.AbstractMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.io.FilterInputStream: int available()>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.io.DataInputStream: char readChar()>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.io.DataInputStream: int readInt()>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.io.DataInputStream: char readChar()>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.lang.Character: java.lang.Character valueOf(char)>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.util.AbstractMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.io.FilterInputStream: int available()>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.io.DataInputStream: char readChar()>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.io.DataInputStream: int readInt()>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.io.DataInputStream: char readChar()>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.lang.Character: java.lang.Character valueOf(char)>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.util.AbstractMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.io.FilterInputStream: int available()>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.io.DataInputStream: char readChar()>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.io.DataInputStream: int readInt()>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.io.DataInputStream: char readChar()>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.lang.Character: java.lang.Character valueOf(char)>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.util.AbstractMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.io.FilterInputStream: int available()>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.io.DataInputStream: char readChar()>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.io.DataInputStream: int readInt()>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.io.DataInputStream: char readChar()>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.lang.Character: java.lang.Character valueOf(char)>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.util.AbstractMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.io.FilterInputStream: int available()>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.io.DataInputStream: char readChar()>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.io.DataInputStream: int readInt()>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.io.DataInputStream: char readChar()>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.lang.Character: java.lang.Character valueOf(char)>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.util.AbstractMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.io.FilterInputStream: int available()>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.io.DataInputStream: char readChar()>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.io.DataInputStream: int readInt()>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.io.DataInputStream: char readChar()>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.lang.Character: java.lang.Character valueOf(char)>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.util.AbstractMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.io.FilterInputStream: int available()>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.io.DataInputStream: char readChar()>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.io.DataInputStream: int readInt()>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.io.DataInputStream: char readChar()>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.lang.Character: java.lang.Character valueOf(char)>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.util.AbstractMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)> -> <java.io.FilterInputStream: int available()>
<com.nesnet.android.cantonese.CantonesePhone: void onCreate(android.os.Bundle)> -> <com.nesnet.android.cantonese.SimpToTradChineseTable: void <init>(java.io.InputStream)>
<com.nesnet.android.cantonese.CantonesePhone: void onCreate(android.os.Bundle)> -> <android.app.Activity: android.view.View findViewById(int)>
<com.nesnet.android.cantonese.CantonesePhone: void onCreate(android.os.Bundle)> -> <android.widget.TextView: void setOnEditorActionListener(android.widget.TextView$OnEditorActionListener)>
<com.nesnet.android.cantonese.CantonesePhone: void onCreate(android.os.Bundle)> -> <android.view.View: void setOnClickListener(android.view.View$OnClickListener)>
<com.nesnet.android.cantonese.CantonesePhone: void onCreate(android.os.Bundle)> -> <android.widget.TextView: void addTextChangedListener(android.text.TextWatcher)>
<com.nesnet.android.cantonese.CantonesePhone: void onCreate(android.os.Bundle)> -> <android.app.Activity: android.view.View findViewById(int)>
<com.nesnet.android.cantonese.CantonesePhone: void onCreate(android.os.Bundle)> -> <android.widget.RadioGroup: void setOnCheckedChangeListener(android.widget.RadioGroup$OnCheckedChangeListener)>
<com.nesnet.android.cantonese.CantonesePhone: void onCreate(android.os.Bundle)> -> <android.app.Activity: android.view.View findViewById(int)>
<com.nesnet.android.cantonese.CantonesePhone: void onCreate(android.os.Bundle)> -> <android.view.View: void setOnClickListener(android.view.View$OnClickListener)>
<com.nesnet.android.cantonese.ImgResolver: void <init>(android.content.Context)> -> <java.lang.Object: void <init>()>
<com.nesnet.android.cantonese.CantonesePhone: void onCreate(android.os.Bundle)> -> <com.nesnet.android.cantonese.ImgResolver: void <init>(android.content.Context)>
<com.nesnet.android.cantonese.DBHelper: void <init>(android.content.Context)> -> <android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>
<com.nesnet.android.cantonese.CantonesePhone: void onCreate(android.os.Bundle)> -> <com.nesnet.android.cantonese.DBHelper: void <init>(android.content.Context)>
<com.nesnet.android.cantonese.DBHelper: void onCreate(android.database.sqlite.SQLiteDatabase)> -> <android.database.sqlite.SQLiteDatabase: void beginTransaction()>
<com.nesnet.android.cantonese.DBHelper: void onCreate(android.database.sqlite.SQLiteDatabase)> -> <android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>
<com.nesnet.android.cantonese.DBHelper: void onCreate(android.database.sqlite.SQLiteDatabase)> -> <android.content.ContentValues: void <init>()>
<com.nesnet.android.cantonese.DBHelper: void onCreate(android.database.sqlite.SQLiteDatabase)> -> <java.lang.Integer: java.lang.String toString(int)>
<com.nesnet.android.cantonese.DBHelper: void onCreate(android.database.sqlite.SQLiteDatabase)> -> <android.content.ContentValues: void put(java.lang.String,java.lang.String)>
<com.nesnet.android.cantonese.DBHelper: void onCreate(android.database.sqlite.SQLiteDatabase)> -> <java.lang.Integer: java.lang.String toString(int)>
<com.nesnet.android.cantonese.DBHelper: void onCreate(android.database.sqlite.SQLiteDatabase)> -> <android.content.ContentValues: void put(java.lang.String,java.lang.String)>
<com.nesnet.android.cantonese.DBHelper: void onCreate(android.database.sqlite.SQLiteDatabase)> -> <android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>
<com.nesnet.android.cantonese.DBHelper: void onCreate(android.database.sqlite.SQLiteDatabase)> -> <java.lang.Integer: java.lang.String toString(int)>
<com.nesnet.android.cantonese.DBHelper: void onCreate(android.database.sqlite.SQLiteDatabase)> -> <android.content.ContentValues: void put(java.lang.String,java.lang.String)>
<com.nesnet.android.cantonese.DBHelper: void onCreate(android.database.sqlite.SQLiteDatabase)> -> <android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>
<com.nesnet.android.cantonese.DBHelper: void onCreate(android.database.sqlite.SQLiteDatabase)> -> <android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>
<com.nesnet.android.cantonese.DBHelper: void onCreate(android.database.sqlite.SQLiteDatabase)> -> <android.database.sqlite.SQLiteDatabase: void endTransaction()>
<com.nesnet.android.cantonese.DBHelper: java.lang.String getSysProp(int)> -> <android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>
<com.nesnet.android.cantonese.DBHelper: java.lang.String getSysProp(int)> -> <java.lang.Integer: java.lang.String toString(int)>
<com.nesnet.android.cantonese.DBHelper: java.lang.String getSysProp(int)> -> <android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>
<com.nesnet.android.cantonese.DBHelper: java.lang.String getSysProp(int)> -> <android.database.AbstractCursor: boolean moveToNext()>
<com.nesnet.android.cantonese.DBHelper: java.lang.String getSysProp(int)> -> <android.database.MatrixCursor: java.lang.String getString(int)>
<com.nesnet.android.cantonese.DBHelper: java.lang.String getSysProp(int)> -> <android.database.AbstractCursor: void close()>
<com.nesnet.android.cantonese.DBHelper: java.lang.String getSysProp(int)> -> <android.database.sqlite.SQLiteClosable: void close()>
<com.nesnet.android.cantonese.DBHelper: int getIntSysProp(int,int)> -> <com.nesnet.android.cantonese.DBHelper: java.lang.String getSysProp(int)>
<com.nesnet.android.cantonese.DBHelper: int getIntSysProp(int,int)> -> <java.lang.Integer: int parseInt(java.lang.String)>
<com.nesnet.android.cantonese.CantonesePhone: void onCreate(android.os.Bundle)> -> <com.nesnet.android.cantonese.DBHelper: int getIntSysProp(int,int)>
<com.nesnet.android.cantonese.CantonesePhone: void onCreate(android.os.Bundle)> -> <com.nesnet.lexi.LexiParser: void setPhonoSystem(int)>
<com.nesnet.android.cantonese.DBHelper: java.lang.String getSysProp(int)> -> <android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>
<com.nesnet.android.cantonese.DBHelper: java.lang.String getSysProp(int)> -> <java.lang.Integer: java.lang.String toString(int)>
<com.nesnet.android.cantonese.DBHelper: java.lang.String getSysProp(int)> -> <android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>
<com.nesnet.android.cantonese.DBHelper: java.lang.String getSysProp(int)> -> <android.database.AbstractCursor: boolean moveToNext()>
<com.nesnet.android.cantonese.DBHelper: java.lang.String getSysProp(int)> -> <android.database.MatrixCursor: java.lang.String getString(int)>
<com.nesnet.android.cantonese.DBHelper: java.lang.String getSysProp(int)> -> <android.database.AbstractCursor: void close()>
<com.nesnet.android.cantonese.DBHelper: java.lang.String getSysProp(int)> -> <android.database.sqlite.SQLiteClosable: void close()>
<com.nesnet.android.cantonese.DBHelper: int getIntSysProp(int,int)> -> <com.nesnet.android.cantonese.DBHelper: java.lang.String getSysProp(int)>
<com.nesnet.android.cantonese.DBHelper: int getIntSysProp(int,int)> -> <java.lang.Integer: int parseInt(java.lang.String)>
<com.nesnet.android.cantonese.CantonesePhone: void onCreate(android.os.Bundle)> -> <com.nesnet.android.cantonese.DBHelper: int getIntSysProp(int,int)>
<com.nesnet.android.cantonese.DBHelper: java.lang.String getSysProp(int)> -> <android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>
<com.nesnet.android.cantonese.DBHelper: java.lang.String getSysProp(int)> -> <java.lang.Integer: java.lang.String toString(int)>
<com.nesnet.android.cantonese.DBHelper: java.lang.String getSysProp(int)> -> <android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>
<com.nesnet.android.cantonese.DBHelper: java.lang.String getSysProp(int)> -> <android.database.AbstractCursor: boolean moveToNext()>
<com.nesnet.android.cantonese.DBHelper: boolean getBooleanSysProp(int)> -> <com.nesnet.android.cantonese.DBHelper: java.lang.String getSysProp(int)>
<com.nesnet.android.cantonese.DBHelper: boolean getBooleanSysProp(int)> -> <java.lang.Boolean: boolean parseBoolean(java.lang.String)>
<com.nesnet.android.cantonese.CantonesePhone: void onCreate(android.os.Bundle)> -> <com.nesnet.android.cantonese.DBHelper: boolean getBooleanSysProp(int)>
<com.nesnet.android.cantonese.CantonesePhone: void onCreate(android.os.Bundle)> -> <android.database.sqlite.SQLiteOpenHelper: void close()>
<com.nesnet.android.cantonese.CantonesePhone: void resetFontSize()> -> <android.app.Activity: android.view.View findViewById(int)>
<com.nesnet.android.cantonese.CantonesePhone: void resetFontSize()> -> <android.widget.TextView: void setTextSize(int,float)>
<com.nesnet.android.cantonese.CantonesePhone: void resetFontSize()> -> <android.app.Activity: android.view.View findViewById(int)>
<com.nesnet.android.cantonese.CantonesePhone: void resetFontSize()> -> <android.widget.TextView: void setTextSize(int,float)>
<com.nesnet.android.cantonese.CantonesePhone: void resetFontSize()> -> <android.app.Activity: android.view.View findViewById(int)>
<com.nesnet.android.cantonese.CantonesePhone: void resetFontSize()> -> <android.widget.TextView: void setTextSize(int,float)>
<com.nesnet.android.cantonese.CantonesePhone: void resetFontSize()> -> <android.app.Activity: android.view.View findViewById(int)>
<com.nesnet.android.cantonese.CantonesePhone: void resetFontSize()> -> <android.widget.TextView: void setTextSize(int,float)>
<com.nesnet.android.cantonese.CantonesePhone: void resetFontSize()> -> <android.app.Activity: android.view.View findViewById(int)>
<com.nesnet.android.cantonese.CantonesePhone: void resetFontSize()> -> <android.widget.TextView: void setTextSize(int,float)>
<com.nesnet.android.cantonese.CantonesePhone: void resetFontSize()> -> <android.app.Activity: android.view.View findViewById(int)>
<com.nesnet.android.cantonese.CantonesePhone: void resetFontSize()> -> <android.widget.TextView: void setTextSize(int,float)>
<com.nesnet.android.cantonese.CantonesePhone: void resetFontSize()> -> <android.app.Activity: android.view.View findViewById(int)>
<com.nesnet.android.cantonese.CantonesePhone: void resetFontSize()> -> <android.widget.TextView: void setTextSize(int,float)>
<com.nesnet.android.cantonese.CantonesePhone: void resetFontSize()> -> <android.app.Activity: android.view.View findViewById(int)>
<com.nesnet.android.cantonese.CantonesePhone: void resetFontSize()> -> <android.widget.TextView: void setTextSize(int,float)>
<com.nesnet.android.cantonese.CantonesePhone: void resetFontSize()> -> <android.app.Activity: android.view.View findViewById(int)>
<com.nesnet.android.cantonese.CantonesePhone: void resetFontSize()> -> <android.widget.TextView: void setTextSize(int,float)>
<com.nesnet.android.cantonese.CantonesePhone: void resetFontSize()> -> <android.app.Activity: android.view.View findViewById(int)>
<com.nesnet.android.cantonese.CantonesePhone: void resetFontSize()> -> <android.widget.TextView: void setTextSize(int,float)>
<com.nesnet.android.cantonese.CantonesePhone: void resetFontSize()> -> <android.app.Activity: android.view.View findViewById(int)>
<com.nesnet.android.cantonese.CantonesePhone: void resetFontSize()> -> <android.widget.TextView: void setTextSize(int,float)>
<com.nesnet.android.cantonese.CantonesePhone: void resetFontSize()> -> <android.app.Activity: android.view.View findViewById(int)>
<com.nesnet.android.cantonese.CantonesePhone: void resetFontSize()> -> <android.widget.TextView: void setTextSize(int,float)>
<com.nesnet.android.cantonese.CantonesePhone: void resetFontSize()> -> <android.app.Activity: android.view.View findViewById(int)>
<com.nesnet.android.cantonese.CantonesePhone: void resetFontSize()> -> <android.widget.TextView: void setTextSize(int,float)>
<com.nesnet.android.cantonese.CantonesePhone: void resetFontSize()> -> <android.app.Activity: android.view.View findViewById(int)>
<com.nesnet.android.cantonese.CantonesePhone: void resetFontSize()> -> <android.widget.TextView: void setTextSize(int,float)>
<com.nesnet.android.cantonese.CantonesePhone: void resetFontSize()> -> <android.app.Activity: android.view.View findViewById(int)>
<com.nesnet.android.cantonese.CantonesePhone: void resetFontSize()> -> <android.widget.TextView: void setTextSize(int,float)>
<com.nesnet.android.cantonese.CantonesePhone: void resetFontSize()> -> <android.app.Activity: android.view.View findViewById(int)>
<com.nesnet.android.cantonese.CantonesePhone: void resetFontSize()> -> <android.widget.TextView: void setTextSize(int,float)>
<com.nesnet.android.cantonese.CantonesePhone: void resetFontSize()> -> <android.app.Activity: android.view.View findViewById(int)>
<com.nesnet.android.cantonese.CantonesePhone: void resetFontSize()> -> <android.widget.TextView: void setTextSize(int,float)>
<com.nesnet.android.cantonese.CantonesePhone: void resetFontSize()> -> <android.app.Activity: android.view.View findViewById(int)>
<com.nesnet.android.cantonese.CantonesePhone: void resetFontSize()> -> <android.widget.TextView: void setTextSize(int,float)>
<com.nesnet.android.cantonese.CantonesePhone: void resetFontSize()> -> <android.app.Activity: android.view.View findViewById(int)>
<com.nesnet.android.cantonese.CantonesePhone: void resetFontSize()> -> <android.widget.TextView: void setTextSize(int,float)>
<com.nesnet.android.cantonese.CantonesePhone: void resetFontSize()> -> <android.app.Activity: android.view.View findViewById(int)>
<com.nesnet.android.cantonese.CantonesePhone: void resetFontSize()> -> <android.widget.TextView: void setTextSize(int,float)>
<com.nesnet.android.cantonese.CantonesePhone: void onCreate(android.os.Bundle)> -> <com.nesnet.android.cantonese.CantonesePhone: void resetFontSize()>
<com.nesnet.android.cantonese.CantonesePhone: void onCreate(android.os.Bundle)> -> <android.media.SoundPool: void setOnLoadCompleteListener(android.media.SoundPool$OnLoadCompleteListener)>
<com.nesnet.android.cantonese.CantonesePhone: void onCreate(android.os.Bundle)> -> <android.app.Activity: android.view.View findViewById(int)>
<com.nesnet.android.cantonese.CantonesePhone: void onCreate(android.os.Bundle)> -> <android.text.method.LinkMovementMethod: android.text.method.MovementMethod getInstance()>
<com.nesnet.android.cantonese.CantonesePhone: void onCreate(android.os.Bundle)> -> <android.widget.TextView: void setMovementMethod(android.text.method.MovementMethod)>
<com.nesnet.android.cantonese.CantonesePhone: void onResume()> -> <android.app.Activity: void onResume()>
[ Intent received ]
caller=<com.nesnet.android.cantonese.CantonesePhone: void onResume()>
callsite=$r1 = virtualinvoke $r0.<com.nesnet.android.cantonese.CantonesePhone: android.content.Intent getIntent()>()
	Action=android.intent.action.MAIN
	Categories=1
		android.intent.category.LAUNCHER
	PackageName=null
	DataString=null
	DataURI=null
	Scheme=null
	Flags=270532608
	Type=null
	Extras=null
	Component=ComponentInfo{com.nesnet.android.cantonese/com.nesnet.android.cantonese.CantonesePhone}
<com.nesnet.android.cantonese.CantonesePhone: void onResume()> -> <android.app.Activity: android.content.Intent getIntent()>
<com.nesnet.android.cantonese.CantonesePhone: void onResume()> -> <android.content.Intent: char getCharExtra(java.lang.String,char)>
<com.northpark.beautycamera.AppInfo: void <init>()> -> <android.app.Application: void <init>()>
<com.northpark.beautycamera.EntryActivity: void <init>()> -> <android.app.Activity: void <init>()>
<com.northpark.beautycamera.EntryActivity: void onCreate(android.os.Bundle)> -> <android.app.Activity: android.view.Window getWindow()>
<com.northpark.beautycamera.EntryActivity: void onCreate(android.os.Bundle)> -> <android.view.Window: void setFlags(int,int)>
<com.northpark.beautycamera.EntryActivity: void onCreate(android.os.Bundle)> -> <android.app.Activity: boolean requestWindowFeature(int)>
<com.northpark.beautycamera.EntryActivity: void onCreate(android.os.Bundle)> -> <android.app.Activity: boolean requestWindowFeature(int)>
<com.northpark.beautycamera.EntryActivity: void onCreate(android.os.Bundle)> -> <android.app.Activity: android.view.Window getWindow()>
<com.northpark.beautycamera.EntryActivity: void onCreate(android.os.Bundle)> -> <android.view.Window: void setFormat(int)>
<com.northpark.beautycamera.EntryActivity: void onCreate(android.os.Bundle)> -> <android.app.Activity: void onCreate(android.os.Bundle)>
<oms.wmessage.main: void <init>()> -> <android.app.Activity: void <init>()>
<oms.wmessage.main: void onCreate(android.os.Bundle)> -> <android.app.Activity: void onCreate(android.os.Bundle)>
<oms.wmessage.main: void onCreate(android.os.Bundle)> -> <android.app.Activity: android.view.Window getWindow()>
<oms.wmessage.main: void onCreate(android.os.Bundle)> -> <android.view.Window: void setFlags(int,int)>
<oms.wmessage.main: void onCreate(android.os.Bundle)> -> <android.app.Activity: boolean requestWindowFeature(int)>
<oms.wmessage.main: void onCreate(android.os.Bundle)> -> <android.app.Activity: void setContentView(int)>
<oms.wmessage.main: void onCreate(android.os.Bundle)> -> <android.app.Activity: android.view.View findViewById(int)>
<oms.wmessage.main: void onCreate(android.os.Bundle)> -> <android.app.Activity: android.view.View findViewById(int)>
<oms.wmessage.main: void onCreate(android.os.Bundle)> -> <android.app.Activity: android.view.View findViewById(int)>
<oms.wmessage.main: void onCreate(android.os.Bundle)> -> <android.view.View: void setOnClickListener(android.view.View$OnClickListener)>
<oms.wmessage.main: void onCreate(android.os.Bundle)> -> <android.view.View: void setOnClickListener(android.view.View$OnClickListener)>
<oms.wmessage.main: void onCreate(android.os.Bundle)> -> <android.view.View: void setOnClickListener(android.view.View$OnClickListener)>
<org.pyload.android.client.pyLoadApp: void <init>()> -> <android.app.Application: void <init>()>
<org.pyload.android.client.d: void <init>(org.pyload.android.client.pyLoadApp)> -> <java.lang.Object: void <init>()>
<org.pyload.android.client.pyLoadApp: void <init>()> -> <org.pyload.android.client.d: void <init>(org.pyload.android.client.pyLoadApp)>
<org.pyload.android.client.e: void <init>(org.pyload.android.client.pyLoadApp)> -> <java.lang.Object: void <init>()>
<org.pyload.android.client.pyLoadApp: void <init>()> -> <org.pyload.android.client.e: void <init>(org.pyload.android.client.pyLoadApp)>
<android.support.v4.app.h: void <init>()> -> <android.app.Activity: void <init>()>
<android.support.v4.app.i: void <init>(android.support.v4.app.h)> -> <android.os.Handler: void <init>()>
<android.support.v4.app.h: void <init>()> -> <android.support.v4.app.i: void <init>(android.support.v4.app.h)>
<android.support.v4.app.o: void <clinit>()> -> <android.view.animation.DecelerateInterpolator: void <init>(float)>
<android.support.v4.app.o: void <clinit>()> -> <android.view.animation.DecelerateInterpolator: void <init>(float)>
<android.support.v4.app.o: void <clinit>()> -> <android.view.animation.AccelerateInterpolator: void <init>(float)>
<android.support.v4.app.o: void <clinit>()> -> <android.view.animation.AccelerateInterpolator: void <init>(float)>
<android.support.v4.app.o: void <init>()> -> <android.support.v4.app.n: void <init>()>
<android.support.v4.app.p: void <init>(android.support.v4.app.o)> -> <java.lang.Object: void <init>()>
<android.support.v4.app.o: void <init>()> -> <android.support.v4.app.p: void <init>(android.support.v4.app.o)>
<android.support.v4.app.h: void <init>()> -> <android.support.v4.app.o: void <init>()>
<android.support.v4.app.j: void <init>(android.support.v4.app.h)> -> <java.lang.Object: void <init>()>
<android.support.v4.app.h: void <init>()> -> <android.support.v4.app.j: void <init>(android.support.v4.app.h)>
<org.pyload.android.client.components.FragmentTabsPager: void <init>()> -> <android.support.v4.app.h: void <init>()>
<org.pyload.android.client.pyLoad: void <init>()> -> <org.pyload.android.client.components.FragmentTabsPager: void <init>()>
<org.pyload.android.client.pyLoad: void onCreate(android.os.Bundle)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.pyload.android.client.pyLoad: void onCreate(android.os.Bundle)> -> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
<org.pyload.android.client.pyLoad: void onCreate(android.os.Bundle)> -> <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>
<org.pyload.android.client.pyLoad: void onCreate(android.os.Bundle)> -> <android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>
<org.pyload.android.client.pyLoad: void onCreate(android.os.Bundle)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.pyload.android.client.pyLoad: void onCreate(android.os.Bundle)> -> <java.util.Locale: java.util.Locale getDefault()>
<org.pyload.android.client.pyLoad: void onCreate(android.os.Bundle)> -> <java.lang.StringBuilder: void <init>(java.lang.String)>
<org.pyload.android.client.pyLoad: void onCreate(android.os.Bundle)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.pyload.android.client.pyLoad: void onCreate(android.os.Bundle)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.pyload.android.client.pyLoad: void onCreate(android.os.Bundle)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.pyload.android.client.pyLoad: void onCreate(android.os.Bundle)> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<org.pyload.android.client.pyLoad: void onCreate(android.os.Bundle)> -> <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<org.pyload.android.client.pyLoad: void onCreate(android.os.Bundle)> -> <android.content.res.Configuration: void <init>(android.content.res.Configuration)>
<org.pyload.android.client.pyLoad: void onCreate(android.os.Bundle)> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<org.pyload.android.client.pyLoad: void onCreate(android.os.Bundle)> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<org.pyload.android.client.pyLoad: void onCreate(android.os.Bundle)> -> <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<org.pyload.android.client.pyLoad: void onCreate(android.os.Bundle)> -> <android.content.res.Resources: void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics)>
<android.support.v4.app.h: void onCreate(android.os.Bundle)> -> <android.support.v4.app.o: void a(android.support.v4.app.h,android.support.v4.app.m,android.support.v4.app.Fragment)>
<android.support.v4.app.h: void onCreate(android.os.Bundle)> -> <android.app.Activity: android.view.LayoutInflater getLayoutInflater()>
<android.support.v4.app.h: void onCreate(android.os.Bundle)> -> <android.view.LayoutInflater: android.view.LayoutInflater$Factory getFactory()>
<android.support.v4.app.h: void onCreate(android.os.Bundle)> -> <android.app.Activity: android.view.LayoutInflater getLayoutInflater()>
<android.support.v4.app.h: void onCreate(android.os.Bundle)> -> <android.view.LayoutInflater: void setFactory(android.view.LayoutInflater$Factory)>
<android.support.v4.app.h: void onCreate(android.os.Bundle)> -> <android.app.Activity: void onCreate(android.os.Bundle)>
<android.support.v4.app.h: void onCreate(android.os.Bundle)> -> <android.app.Activity: java.lang.Object getLastNonConfigurationInstance()>
<android.support.v4.app.o: void e(int)> -> <android.support.v4.app.o: void a(int,int,int,boolean)>
<android.support.v4.app.o: void i()> -> <android.support.v4.app.o: void e(int)>
<android.support.v4.app.h: void onCreate(android.os.Bundle)> -> <android.support.v4.app.o: void i()>
<org.pyload.android.client.components.FragmentTabsPager: void onCreate(android.os.Bundle)> -> <android.support.v4.app.h: void onCreate(android.os.Bundle)>
<org.pyload.android.client.components.FragmentTabsPager: void onCreate(android.os.Bundle)> -> <org.pyload.android.client.pyLoadApp: boolean h()>
